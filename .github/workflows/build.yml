name: üèóÔ∏è Build Apps

on:
  push:
    branches:
      - main
    paths:
      - 'apps/qownnotes/**'
      - '.github/workflows/build.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= main:WYsIaF+ItMNE9Xt976bIGKSKp9jaaVeTzYlfqQqpP28= qownnotes:7hN006Z7xgK5v97WKFo9u3qcVbZIXHtFmPPM3NPERpM=
            substituters = https://cache.nixos.org/ https://nix-cache.qownnotes.org/main https://nix-cache.qownnotes.org/qownnotes
#      - name: Install Nix
#        run: |
#          curl -L https://nixos.org/nix/install | sh
#          . $HOME/.nix-profile/etc/profile.d/nix.sh
#      - name: Set up Nix build environment
#        run: nix-shell '<nixpkgs>' -A haskellPackages.ghc
#      - name: Update Nix channels
#        run: nix-channel --update
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log-in into attic
        run: nix-shell -p attic-client --run "attic login server https://nix-cache.qownnotes.org $ATTIC_SECRET_KEY"
        env:
          ATTIC_SECRET_KEY: ${{ secrets.ATTIC_SECRET_KEY }}
#      - name: Build qc package
#        run: |
#          cd apps/qc && \
#          nix-build -E '((import <nixpkgs> {}).callPackage (import ./default.nix) { })' && \
#          nix-shell https://github.com/zhaofengli/attic/tarball/main -A demo --run "attic push qownnotes ./result"
      - name: Build qownnotes package
        run: |
          cd apps/qownnotes && \
          nix-build -E '((import <nixpkgs> {}).callPackage (import ./package.nix) { })' && \
          nix-shell -p attic-client --run "attic push qownnotes ./result"
